/*
struct ListNode {
	int val;
	struct ListNode *next;
	ListNode(int x) :
		val(x), next(NULL) {
	}
};
*/
class Solution {
public:
	ListNode* EntryNodeOfLoop(ListNode* pHead)
	{
        ListNode* meetingNode = MeetingNode(pHead);
        if(meetingNode == NULL) return NULL;
        
       // int nodesInLoop = 1;
        ListNode* pNode1 = meetingNode;
        //while(pNode1!=meetingNode){
        //    nodesInLoop++;
        //    pNode1 = pNode1->next;
        //}
        
       // pNode1 = pHead;
       // for(int i=0;i<nodesInLoop;++i)
       //     pNode1 = pNode1->next;
        
        ListNode* pNode2 = pHead;
        while(pNode1!=pNode2){
            pNode1=pNode1->next;
            pNode2=pNode2->next;
        }
        return pNode1;

	}
    ListNode* MeetingNode(ListNode* pHead)
	{
        if(pHead == NULL) return NULL;
        ListNode* pFast = pHead;
        ListNode* pSlow = pHead;
        
        pSlow = pSlow->next;
        if(pSlow == NULL) return NULL;
        
        pFast = pSlow->next;
        while(pFast != NULL && pSlow != NULL){
            if(pFast == pSlow) return pSlow;
            pSlow = pSlow->next;
            pFast = pFast->next;
            if(pFast!=NULL)  pFast = pFast->next;
        }
        
        return NULL;

	}
};
