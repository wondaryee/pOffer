/*
struct TreeNode {
	int val;
	struct TreeNode *left;
	struct TreeNode *right;
	TreeNode(int x) :
			val(x), left(NULL), right(NULL) {
	}
};
*/
class Solution {
public:
    TreeNode* Convert(TreeNode* pRootOfTree)
	{
		TreeNode* pLastNodeInList = NULL;
        ConvertToList(pRootOfTree,&pLastNodeInList);
        
        TreeNode* pHeadOfList = pLastNodeInList;
        while(pHeadOfList != NULL && pHeadOfList->left != NULL)
            pHeadOfList = pHeadOfList->left;
        
        return pHeadOfList;
	}
    
    void ConvertToList(TreeNode* pNode, TreeNode **pLastNodeInList)
    {
    	if(pNode == NULL) return;
        
        TreeNode* pCurrent = pNode;
        
        if(pCurrent->left != NULL)
            ConvertToList(pCurrent->left,pLastNodeInList);
        
        pCurrent->left = *pLastNodeInList;
        
        if(*pLastNodeInList != NULL)
            (*pLastNodeInList)->right = pCurrent;
        
        *pLastNodeInList = pCurrent;
        
        if(pCurrent->right != NULL)
            ConvertToList(pCurrent->right,pLastNodeInList);
    }
};
